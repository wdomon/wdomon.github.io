<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Admin Brain Dump</title><link>https://adminbraindump.com/post/</link><description>Recent content in Posts on Admin Brain Dump</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Sep 2022 17:59:38 -0700</lastBuildDate><atom:link href="https://adminbraindump.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Change Friendly Name on Exchange Certificate</title><link>https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/</link><pubDate>Sat, 03 Sep 2022 17:59:38 -0700</pubDate><guid>https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/</guid><description>&lt;p>If you use a wildcard certificate on your onprem Exchange server, it is common that the CSR and certificate are generated outside of the Exchange environment and you are importing it into Exchange. If that&amp;rsquo;s the case, you don&amp;rsquo;t get an option for changing the Friendly Name of the certificate during the import process. This can result in Exchange listing multiple certificates with the same name on the Certificates page in ECP.
&lt;img src="https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/dup-cert-names.png"
width="670"
height="162"
srcset="https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/dup-cert-names_hu31a8935816bcba14dd53db42aa029d5d_13451_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/dup-cert-names_hu31a8935816bcba14dd53db42aa029d5d_13451_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="413"
data-flex-basis="992px"
>&lt;/p>
&lt;h3 id="changing-friendly-name">Changing friendly name&lt;/h3>
&lt;p>You would think that Microsoft would provide an intuitive way to change the friendly name of a certificate either within the ECP web GUI or at least through Powershell cmdlet. Unfortunately, &lt;code>Set-ExchangeCertificate&lt;/code> does not exist and ECP does not give any options to modify the friendly name. Luckily, there is a quick and easy (albeit a bit unintutiive) way to change the friendly name of an Exchange certificate by leveraging a cmdlet that you wouldn&amp;rsquo;t expect to permanently change any attribute: &lt;code>Get-ExchangeCertificate&lt;/code>. To do this, just access the FriendlyName attribute of the certificate in question and set/force the name you want in its place; I name my certificates with the Subject Name followed by the expiry year.
&lt;img src="https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/cert-before-during-after.png"
width="1132"
height="196"
srcset="https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/cert-before-during-after_hu8da577dee7e24dd24a9c65b377b54b7d_47440_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/cert-before-during-after_hu8da577dee7e24dd24a9c65b377b54b7d_47440_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="577"
data-flex-basis="1386px"
>&lt;/p>
&lt;h3 id="alternative-method">Alternative method&lt;/h3>
&lt;p>I have come across a couple scenarios where for some reason the above method didn&amp;rsquo;t work. The command wouldn&amp;rsquo;t output any errors, but the certificate just would not have a different friendly name afterwards. In those few examples, I used a slightly different method to accomplish the same thing. For this, we&amp;rsquo;re effectively doing the same thing but instead of using Exchange, we&amp;rsquo;re just leveraging Powershell&amp;rsquo;s &lt;code>Get-ChildItem&lt;/code> to objectify the certificate we want.
&lt;img src="https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/cert-gci-before-during-after.png"
width="1164"
height="198"
srcset="https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/cert-gci-before-during-after_hu1e8a97e20e41eb8fec8d87cff1a16171_75431_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/change-friendly-name-on-exchange-certificate/cert-gci-before-during-after_hu1e8a97e20e41eb8fec8d87cff1a16171_75431_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="587"
data-flex-basis="1410px"
>&lt;/p>
&lt;p>Keeping clear friendly names will help differentiate certificates no matter how those certificates are being viewed and avoid confusion for others on your team!&lt;/p>
&lt;h3 id="code">Code&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>(Get-ExchangeCertificate -Thumbprint &lt;span style="color:#e6db74">&amp;#34;&amp;lt;thumbprint&amp;gt;&amp;#34;&lt;/span>).FriendlyName = &lt;span style="color:#e6db74">&amp;#39;*.domain.com_2023&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(Get-ChildItem -Path &lt;span style="color:#e6db74">&amp;#34;Cert:\LocalMachine\my\&amp;lt;thumbprint&amp;gt;&amp;#34;&lt;/span>).FriendlyName = &lt;span style="color:#e6db74">&amp;#39;*.domain.com_2023&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Set a Sharepoint Online site to Read-Only or Disabled</title><link>https://adminbraindump.com/post/sharepoint-online-site-lock/</link><pubDate>Mon, 29 Aug 2022 16:03:16 -0700</pubDate><guid>https://adminbraindump.com/post/sharepoint-online-site-lock/</guid><description>&lt;p>Sharepoint Online (SPO) management tools provided by Microsoft leave something to be desired, to say the least. The admin center web GUI is missing an enormous amount of functionality and the Powershell module is pretty unintuitive. While I don&amp;rsquo;t use a ton of SPO, I recently migrated a site to a different M365 tenant and had the need to set that site to a Read-Only state for a period of time (to ensure we had something to reference in the event someone reported that something was missing) and then disable access to it entirely. Using the SPO Powershell Module, you can quickly and easily change the &lt;code>LockState&lt;/code> attribute of an SPO site.&lt;/p>
&lt;p>First connect to SPO using the administrative URL of your M365 tenant using the &lt;a class="link" href="https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/connect-sposervice?view=sharepoint-ps" target="_blank" rel="noopener"
>Connect-SPOService&lt;/a> command. The administrtive URL you connect to is always the same format:&lt;br>
&lt;code>Connect-SPOService -Url https://tenantname-admin.sharepoint.com&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://adminbraindump.com/post/sharepoint-online-site-lock/spo-connect.png"
width="885"
height="383"
srcset="https://adminbraindump.com/post/sharepoint-online-site-lock/spo-connect_huc44afd70925cd8ce2870cdc88ba3cc18_49211_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/sharepoint-online-site-lock/spo-connect_huc44afd70925cd8ce2870cdc88ba3cc18_49211_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="231"
data-flex-basis="554px"
>&lt;/p>
&lt;p>Once connected, set the &lt;code>LockState&lt;/code> property of the site accordingly using the &lt;a class="link" href="https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/set-sposite?view=sharepoint-ps" target="_blank" rel="noopener"
>Set-SPOSite&lt;/a> command. This property can accept three values:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Unlocked&lt;/code> - Default state, site is available&lt;/li>
&lt;li>&lt;code>ReadOnly&lt;/code> - Site is in a view only state so no changes can be made. A message appears at the top of the site indicating that the administrator is preventing any changes from being made to this site. Permissions of folders can be viewed but whether or not those permissions are inheriting&lt;/li>
&lt;li>&lt;code>NoAccess&lt;/code> - Disables the site entirely. If the tenant has a value for &lt;code>NoAccessRedirectUrl&lt;/code> then all traffic will be forward to that URL. If that value is not set, then a 403 error will be returned for all visitors of the site.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Connect-SPOService -Url &lt;span style="color:#e6db74">&amp;#34;https://tenantname-admin.sharepoint.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-SPOSite -Identity &lt;span style="color:#e6db74">&amp;#34;https://tenantname.sharepoint.com/sites/Company&amp;#34;&lt;/span> -LockState &lt;span style="color:#e6db74">&amp;#34;ReadOnly&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Create a new post in Hugo</title><link>https://adminbraindump.com/post/hugo-new-post/</link><pubDate>Sat, 27 Aug 2022 18:46:26 -0700</pubDate><guid>https://adminbraindump.com/post/hugo-new-post/</guid><description>&lt;p>Creating a new post using &lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>hugo&lt;/a> is literally a one-liner. Just make sure to set the path inside the &amp;lsquo;post&amp;rsquo; folder.&lt;/p>
&lt;p>&lt;img src="https://adminbraindump.com/post/hugo-new-post/hugo-new-post.png"
width="806"
height="161"
srcset="https://adminbraindump.com/post/hugo-new-post/hugo-new-post_hu37cb35cc190574a2b05d30e3d9944e31_9913_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/hugo-new-post/hugo-new-post_hu37cb35cc190574a2b05d30e3d9944e31_9913_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="500"
data-flex-basis="1201px"
>&lt;/p>
&lt;p>After creating the post, update/save the markdown file then commit and push to the Github repo.&lt;/p>
&lt;p>&lt;img src="https://adminbraindump.com/post/hugo-new-post/hugo-new-post-commit.png"
width="1639"
height="1060"
srcset="https://adminbraindump.com/post/hugo-new-post/hugo-new-post-commit_hua1bf7a15b475eb4a82942c61d1ee3214_93374_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/hugo-new-post/hugo-new-post-commit_hua1bf7a15b475eb4a82942c61d1ee3214_93374_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
>&lt;/p></description></item><item><title>Block an IP address on Azure App Service</title><link>https://adminbraindump.com/post/azure-app-service-block-ip/</link><pubDate>Sat, 27 Aug 2022 18:01:14 -0700</pubDate><guid>https://adminbraindump.com/post/azure-app-service-block-ip/</guid><description>&lt;p>If malicious/suspicious user activity (scanning, auth attempts, etc.) is detected on an Azure App Service, blocking the source IP is often the quickest way to prevent further activity. To do so, it&amp;rsquo;s as easy as adding a Network rule to the app service that blocks that IP/range.&lt;/p>
&lt;h3 id="requirements">Requirements&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-8.2.0" target="_blank" rel="noopener"
>Azure Az Powershell Module&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Backticks for formatting&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Add-AzWebAppAccessRestrictionRule `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-ResourceGroupName &lt;span style="color:#e6db74">&amp;#34;ResourceGroup&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-WebAppName &lt;span style="color:#e6db74">&amp;#34;AppName&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Name &lt;span style="color:#e6db74">&amp;#34;Ip example rule&amp;#34;&lt;/span> ` &lt;span style="color:#75715e">#Friendly name of rule&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Priority 100 ` &lt;span style="color:#75715e">#If this app is publicly available, make sure this priority is lower than the priority of the 0.0.0.0/0 rule&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Action Deny `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-IpAddress 122.133.144.155/32
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Same command one-liner&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Add-AzWebAppAccessRestrictionRule -ResourceGroupName &lt;span style="color:#e6db74">&amp;#34;ResourceGroup&amp;#34;&lt;/span> -WebAppName &lt;span style="color:#e6db74">&amp;#34;AppName&amp;#34;&lt;/span> -Name &lt;span style="color:#e6db74">&amp;#34;Ip example rule&amp;#34;&lt;/span> -Priority 100 -Action Deny -IpAddress 122.133.144.155/32
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="doing-things-the-old-way">Doing things the old way&lt;/h2>
&lt;p>In the Azure web GUI, access the app service in question and click the &amp;ldquo;Networking&amp;rdquo; navigation blade on the left.&lt;/p>
&lt;p>Click &amp;ldquo;Access restriction&amp;rdquo;&lt;br>
&lt;img src="https://adminbraindump.com/post/azure-app-service-block-ip/access-restriction.png"
width="377"
height="315"
srcset="https://adminbraindump.com/post/azure-app-service-block-ip/access-restriction_huc5458e8fa0d984c06e0b6dd85396afe8_9546_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/azure-app-service-block-ip/access-restriction_huc5458e8fa0d984c06e0b6dd85396afe8_9546_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="119"
data-flex-basis="287px"
>&lt;/p>
&lt;p>Click &amp;ldquo;Add rule&amp;rdquo;&lt;br>
&lt;img src="https://adminbraindump.com/post/azure-app-service-block-ip/add-rule.png"
width="349"
height="488"
srcset="https://adminbraindump.com/post/azure-app-service-block-ip/add-rule_hu2a5b323919173bf9fb75804bdea3480e_15049_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/azure-app-service-block-ip/add-rule_hu2a5b323919173bf9fb75804bdea3480e_15049_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="71"
data-flex-basis="171px"
>&lt;/p>
&lt;p>Give the rule a name, change the toggle to &amp;ldquo;Deny,&amp;rdquo; set a priority for the rule (if this is a publicly available app service, make sure to set the new rule with a lower priority than the &amp;ldquo;Allow All&amp;rdquo; rule that exists (0.0.0.0/0), add the CIDR notation of the IP address in question, and click the &amp;ldquo;Add rule&amp;rdquo; button to save the changes. All traffic from that IP address will immediately be blocked.&lt;br>
&lt;img src="https://adminbraindump.com/post/azure-app-service-block-ip/rule-settings.png"
width="382"
height="578"
srcset="https://adminbraindump.com/post/azure-app-service-block-ip/rule-settings_hu2aeb3e649404f1abf7bafd98bfddec8c_14047_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/azure-app-service-block-ip/rule-settings_hu2aeb3e649404f1abf7bafd98bfddec8c_14047_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="66"
data-flex-basis="158px"
>&lt;/p></description></item></channel></rss>