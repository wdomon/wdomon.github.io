<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DNS on Admin Brain Dump</title><link>https://adminbraindump.com/tags/dns/</link><description>Recent content in DNS on Admin Brain Dump</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 22 Sep 2022 16:06:33 -0700</lastBuildDate><atom:link href="https://adminbraindump.com/tags/dns/index.xml" rel="self" type="application/rss+xml"/><item><title>Find Created/Modified Date of Active Directory DNS Object</title><link>https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/</link><pubDate>Thu, 22 Sep 2022 16:06:33 -0700</pubDate><guid>https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/</guid><description>&lt;p>Be honest, your onprem DNS is probably a bit of a mess. I&amp;rsquo;ve yet to encounter an organization that doesn&amp;rsquo;t have old/stale records in their onprem Active Directory integrated DNS; even when DNS scavenging is enabled. Sometimes this is a lack of time spent on housekeeping within DNS (&lt;em>raises hand&lt;/em>: &amp;ldquo;guilty!&amp;rdquo;), other times it&amp;rsquo;s because nobody is quite sure how long that DNS record has been around to identify whether it can be deleted or not. We can use Powershell to identify DNS records &lt;code>Created&lt;/code> and/or &lt;code>Modified&lt;/code> date to help answer some questions about whether it can be deleted. However, the traditional DNS Powershell cmdlets (&lt;code>Get-DnsServerResourceRecord&lt;/code>, etc.) will not output any information regarding &lt;code>Created&lt;/code> or &lt;code>Modified&lt;/code>. Instead, we will leverage the Active Directory database behind the scenes to get these attributes.&lt;/p>
&lt;h3 id="finding-specific-dns-objects">Finding specific DNS objects&lt;/h3>
&lt;p>By default when the Active Directory Powershell Module is installed/imported (either on a Domain Controller or when RSAT Tools are installed), Powershell recognizes &amp;ldquo;AD:&amp;rdquo; as a valid drive and this can be used to browse the AD database. To see the different drives that Powershell will recognize, run &lt;code>Get-PSDrive&lt;/code>.&lt;br>
&lt;img src="https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/get-psdrive.png"
width="580"
height="248"
srcset="https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/get-psdrive_hu727a18e7074c7ba58d243b8f9a1158de_41394_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/get-psdrive_hu727a18e7074c7ba58d243b8f9a1158de_41394_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="233"
data-flex-basis="561px"
>&lt;/p>
&lt;p>We can use &lt;code>Get-ChildItem&lt;/code> to iterate through objects in this &amp;ldquo;drive&amp;rdquo; and output attributes of those objects; including the &lt;code>Created&lt;/code> and &lt;code>Modified&lt;/code> attributes. Typically, &lt;code>Get-ChildItem&lt;/code> is used in conjuction with File Systems (network drives, local drives, etc.) so under common cirumstances I would &lt;a class="link" href="https://adminbraindump.com/post/improve-powershell-runtimes-using-filter-parameter/" >always recommend using the &lt;code>-Filter&lt;/code> parameter&lt;/a> for that cmdlet when trying to grab specific objects; this cuts WAY down on the amount of time it takes an object to be returned. However, per &lt;a class="link" href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-7.2#-filter" target="_blank" rel="noopener"
>Microsoft Documentation for that parameter&lt;/a>, &lt;em>&amp;ldquo;The FileSystem provider is the only installed Powershell provider that supports filters.&amp;rdquo;&lt;/em> As you can see below, our AD: drive does not have a &lt;code>Provider&lt;/code> of FileSystem, so we cannot use the &lt;code>-Filter&lt;/code> parameter for this. My DNS environment has a little over 11,000 records so it&amp;rsquo;s not a huge loss, but for extremely large environments it could hurt.
&lt;img src="https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/get-psdrive-filesystem.png"
width="580"
height="248"
srcset="https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/get-psdrive-filesystem_hucc1e3d7e1a88f7edea78e8714d9cb90b_41767_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/get-psdrive-filesystem_hucc1e3d7e1a88f7edea78e8714d9cb90b_41767_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="233"
data-flex-basis="561px"
>&lt;/p>
&lt;p>Assuming that we&amp;rsquo;re not looking to output all records (scroll down for more on that), we can leverage &lt;code>Where-Object&lt;/code> to only output the objects based on the criteria we want. For this, we specify the path of our &lt;code>Get-ChildItem&lt;/code> function to the DNS path inside the aforementioned AD &amp;ldquo;drive,&amp;rdquo; pipe that to &lt;code>Where-Object&lt;/code> to specify the criteria we&amp;rsquo;re looking for (in this case &amp;ldquo;Name&amp;rdquo;), then pipe that to Get-ADObject to output the &lt;code>Created&lt;/code> and &lt;code>Modified&lt;/code> attributes of that object in the AD database.&lt;br>
&lt;img src="https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/where-object.png"
width="858"
height="118"
srcset="https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/where-object_hub37ac6b6b163a6e6be0e2f9ffbef3ba5_14855_480x0_resize_box_3.png 480w, https://adminbraindump.com/post/find-created-modified-date-of-active-directory-dns-object/where-object_hub37ac6b6b163a6e6be0e2f9ffbef3ba5_14855_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="727"
data-flex-basis="1745px"
>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Get-ChildItem -Path &lt;span style="color:#e6db74">&amp;#34;AD:DC=domain.com,CN=MicrosoftDNS,CN=System,DC=domain,DC=com&amp;#34;&lt;/span> | Where-Object {$_.Name &lt;span style="color:#f92672">-eq&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;record name&amp;gt;&amp;#34;&lt;/span>} | Get-ADObject -Properties Created,Modified | Select-Object Name,Created,Modified
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Get-ChildItem -Path &lt;span style="color:#e6db74">&amp;#34;AD:DC=domain.com,CN=MicrosoftDNS,CN=System,DC=domain,DC=com&amp;#34;&lt;/span> | Where-Object {$_.Name &lt;span style="color:#f92672">-like&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*&amp;lt;keyword&amp;gt;*&amp;#34;&lt;/span>} | Get-ADObject -Properties Created,Modified | Select-Object Name,Created,Modified
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="output-all-dns-objects">Output all DNS objects&lt;/h3>
&lt;p>If you want to output the created and/or modified date of every DNS object in the AD environment just remove the &lt;code>Where-Object&lt;/code> function from the pipeline. Given how many objects are likely going to be returned, you will likely want to pipe that to &lt;code>Export-Csv&lt;/code> to ensure that you have a readable file rather than having it all dump to the Powershell console.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Get-ChildItem -Path &lt;span style="color:#e6db74">&amp;#34;AD:DC=domain.com,CN=MicrosoftDNS,CN=System,DC=domain,DC=com&amp;#34;&lt;/span> | Get-ADObject -Properties Created,Modified | Select-Object Name,Created,Modified | Export-Csv -Path $env:USERPROFILE\Downloads\AD_DNS.csv -NoTypeInformation
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>